// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.fiftyhertz.web;

import com.fiftyhertz.Generation;
import com.fiftyhertz.domain.Consumption;
import com.fiftyhertz.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Generation, String> ApplicationConversionServiceFactoryBean.getGenerationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.fiftyhertz.Generation, java.lang.String>() {
            public String convert(Generation generation) {
                return new StringBuilder().append(generation.getStateName()).append(' ').append(generation.getGenYear()).append(' ').append(generation.getThermal()).append(' ').append(generation.getNuclear()).toString();
            }
        };
    }
    
    public Converter<Long, Generation> ApplicationConversionServiceFactoryBean.getIdToGenerationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.fiftyhertz.Generation>() {
            public com.fiftyhertz.Generation convert(java.lang.Long id) {
                return Generation.findGeneration(id);
            }
        };
    }
    
    public Converter<String, Generation> ApplicationConversionServiceFactoryBean.getStringToGenerationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.fiftyhertz.Generation>() {
            public com.fiftyhertz.Generation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Generation.class);
            }
        };
    }
    
    public Converter<Consumption, String> ApplicationConversionServiceFactoryBean.getConsumptionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.fiftyhertz.domain.Consumption, java.lang.String>() {
            public String convert(Consumption consumption) {
                return new StringBuilder().append(consumption.getStateName()).append(' ').append(consumption.getConsYear()).append(' ').append(consumption.getNuclear()).append(' ').append(consumption.getHydro()).toString();
            }
        };
    }
    
    public Converter<Long, Consumption> ApplicationConversionServiceFactoryBean.getIdToConsumptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.fiftyhertz.domain.Consumption>() {
            public com.fiftyhertz.domain.Consumption convert(java.lang.Long id) {
                return Consumption.findConsumption(id);
            }
        };
    }
    
    public Converter<String, Consumption> ApplicationConversionServiceFactoryBean.getStringToConsumptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.fiftyhertz.domain.Consumption>() {
            public com.fiftyhertz.domain.Consumption convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Consumption.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGenerationToStringConverter());
        registry.addConverter(getIdToGenerationConverter());
        registry.addConverter(getStringToGenerationConverter());
        registry.addConverter(getConsumptionToStringConverter());
        registry.addConverter(getIdToConsumptionConverter());
        registry.addConverter(getStringToConsumptionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
